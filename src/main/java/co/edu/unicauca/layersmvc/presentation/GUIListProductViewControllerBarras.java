/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.unicauca.layersmvc.presentation;

import co.edu.unicauca.layersmvc.domain.Product;
import co.edu.unicauca.layersmvc.domain.service.ServiceModel;
import co.edu.unicauca.layersmvc.infra.Observer;
import javax.swing.DefaultListModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author EDWIN ADRADA
 */
public class GUIListProductViewControllerBarras extends javax.swing.JFrame implements Observer {

    ServiceModel service;
    DefaultListModel model;
    int cantidad1 = 0,cantidad2 = 0, cantidad3 = 0;
    ChartFrame f;
    DefaultCategoryDataset ds = new DefaultCategoryDataset();
    
    /**
     * Creates new form GUIListProductViewControllerBarras
     */
    public GUIListProductViewControllerBarras(ServiceModel service) {
        initComponents();
        this.service = service;
        this.model = new DefaultListModel();
        String titulo1 = "Grafico de Barras";
        try{
            JFreeChart jf = ChartFactory.createBarChart3D(titulo1, "Producos por precio", "Cantidad", ds, PlotOrientation.HORIZONTAL, true, true, true);
            f = new ChartFrame("Cantidad de productos",jf);
            
            f.setSize(500, 300);
            f.setLocation(10, 470);
        } catch(Exception e){
            System.out.println("Error"+e);
        }

        setSize(580, 350);
        setLocation(5, 450);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 169, Short.MAX_VALUE)
                .addComponent(btnCerrar))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(btnCerrar)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        this.dispose();
        f.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Object o) {
        this.setVisible(true);
        f.setVisible(true);
        model.removeAllElements();
        for (Product p : service.listProducts()) {
            model.addElement(p.getProductId() + " " + p.getName() + " " + p.getPrice());

            if (p.getPrice() <= 1000000) {
                cantidad1++;
            } else if (p.getPrice() <= 2000000) {
                cantidad2++;
                cantidad3++;
            } else {
                cantidad3++;
            }
            
            
            ds.addValue(cantidad1, "Productos menor a un millon", "");
            ds.addValue(cantidad2, "Productos entre un millon y 2 millones", "");
            ds.addValue(cantidad3, "Productos mayores a un millon", "");

        }
    }
}
